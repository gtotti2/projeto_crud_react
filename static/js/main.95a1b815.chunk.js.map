{"version":3,"sources":["assets/images/logo.png","components/template/Header.jsx","components/template/Main.jsx","components/home/Home.jsx","components/user/UserCrud.jsx","main/Routes.jsx","components/template/Logo.jsx","components/template/Nav-item.jsx","components/template/Nav.jsx","components/template/Footer.jsx","serviceWorker.js","index.js","main/App.jsx"],"names":["module","exports","__webpack_require__","p","template_Header","props","react_default","a","createElement","className","concat","icon","title","subtitle","template_Main","react","children","Home","headerProps","baseUrl","initialState","user","name","email","list","UserCrud","state","_this2","this","Axios","then","resp","setState","data","_this3","method","id","url","getUpdatedList","event","Object","objectSpread","target","value","_this4","htmlFor","type","onChange","e","updateField","placeholder","onClick","save","clear","add","arguments","length","undefined","filter","u","unshift","_this5","delete","renderRows","_this6","map","key","load","remove","renderForm","renderTable","Component","Routes","react_router_es","exact","path","component","from","to","template_Logo","es","src","logo","alt","Nav_item","href","link","label","template_Nav","template_Footer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95a1b815.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b5abf8a5.png\";","import './Header.css'\r\nimport React from 'react'\r\n\r\nexport default props =>\r\n    <header className=\"header d-none d-sm-flex flex-column\">\r\n        <h1 className=\"mt-3\">\r\n            <i className={`fa fa-${props.icon}`}></i>{props.title}\r\n        </h1>\r\n        <div className=\"lead text-muted\">{props.subtitle}</div>\r\n    </header>","import './Main.css'\r\nimport React, { Fragment } from 'react'\r\nimport Header from './Header'\r\n\r\nexport default props =>\r\n    <Fragment>\r\n        <Header {...props} />\r\n        <main className=\"content container-fluid\">\r\n            <div className=\"p-3 mt-3\">{props.children}</div>\r\n        </main>   \r\n    </Fragment>","import React from 'react'\r\nimport Main from '../template/Main'\r\n\r\nexport default props =>\r\n    <Main icon=\"home\" title=\"Início\" subtitle=\"Segundo Projeto\">\r\n        <div className=\"display-4\">Bem vindo</div>\r\n        <hr />\r\n        <p className=\"mb-0\">Sistema</p>\r\n    </Main>","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport Main from '../template/Main'\r\n\r\nconst headerProps = {\r\n    icon: 'users',\r\n    title: 'Usuários',\r\n    subtitle: 'Cadastro'\r\n}\r\n\r\nconst baseUrl = 'http://localhost:3001/users'\r\n\r\nconst initialState = {\r\n    user: { name: '', email: '' },\r\n    list: []\r\n\r\n}\r\n\r\n\r\nexport default class UserCrud extends Component {\r\n\r\n    state = { ...initialState }\r\n\r\n    componentWillMount() {\r\n        Axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post'\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n\r\n        Axios[method](url, user).then(resp => {\r\n            const list = this.getUpdatedList(resp.data)\r\n            this.setState({ user: initialState.user, list })\r\n        })\r\n    }\r\n\r\n    updateField(event) {\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderForm() {\r\n        return (\r\n            <div className=\"form\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\">Nome</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.user.name} onChange={e => this.updateField(e)} placeholder=\"Digite o nome\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\">Email</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"email\" value={this.state.user.email} onChange={e => this.updateField(e)} placeholder=\"Digite o email\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 d-flex justify-content-end\">\r\n                        <button className=\"btn btn-primary\" onClick={e => this.save(e)}>Salvar</button>\r\n                        <button className=\"btn btn-secondary ml-2\" onClick={e => this.clear(e)}>Cancelar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getUpdatedList(user, add = true) {\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if (add) { list.unshift(user) }\r\n        return list\r\n    }\r\n    load(user) {\r\n        this.setState({ user })\r\n    }\r\n    remove(user) {\r\n        Axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    renderTable() {\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Nome</th>\r\n                        <th>E-mail</th>\r\n                        <th>Açoes</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n    renderRows() {\r\n        return this.state.list.map(user => {\r\n            return (\r\n                <tr key={user.id}>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>\r\n                        <button onClick={() => this.load(user)} className=\"btn btn-warning\"><i className=\"fa fa-pencil\"></i></button>\r\n                        <button onClick={() => this.remove(user)} className=\"btn btn-danger ml-2\"><i className=\"fa fa-trash\"></i></button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Main {...headerProps}>{this.renderForm()}{this.renderTable()}</Main>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router'\r\n\r\nimport Home from '../components/home/Home'\r\nimport UserCrud from '../components/user/UserCrud'\r\n\r\nexport default props =>\r\n    <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route exact path='/users' component={UserCrud} />\r\n        <Redirect from=\"*\" to='/' />\r\n    </Switch>","import './Logo.css'\r\nimport logo from '../../assets/images/logo.png'\r\nimport React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default props =>\r\n    <aside className=\"logo\">\r\n        <Link to=\"/\" className=\"logo\">\r\n            <img src={logo} alt=\"logo\" />\r\n        </Link>\r\n    </aside>","import './Nav.css'\r\nimport React from 'react'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default props =>\r\n    <a href={props.link}>\r\n        <i className={`fa ${props.icon}`}></i>{props.label}\r\n    </a>","import './Nav.css'\r\nimport NavItem from './Nav-item';\r\nimport React from 'react'\r\n\r\nexport default props =>\r\n    <aside className=\"menu-area\">\r\n        <nav className=\"menu\">\r\n            <NavItem link=\"/\" icon=\"fa-home\" label=\" Início\" />\r\n            <NavItem link=\"/users\" icon=\"fa-users\" label=\" Usuários\" />\r\n        </nav>\r\n    </aside>","import './Footer.css'\r\nimport React from 'react'\r\n\r\nexport default props =>\r\n    <footer className=\"footer\">\r\n        <span>\r\n            Desenvolvido com <i className=\"fa fa-heart text-danger\"></i>\r\n        </span>\r\n    </footer>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport './App.css'\r\nimport React from 'react'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport Routes from './Routes'\r\n\r\nimport Logo from '../components/template/Logo'\r\nimport Nav from '../components/template/Nav'\r\n\r\nimport Footer from '../components/template/Footer'\r\n\r\n\r\nexport default props =>\r\n\r\n    <BrowserRouter>\r\n        <div className=\"app\">\r\n            <Logo />\r\n            <Nav />\r\n            <Routes />\r\n            <Footer />\r\n        </div>\r\n\r\n    </BrowserRouter>\r\n"],"sourceRoot":""}